#include <stdio.h>
#include <stdlib.h>

struct node 
    {
    int data;
    struct node *next;
    }*start=NULL;;



void create()
    {
    int num;
    struct node *temp;
    printf("enter the element to be inserted:");
    scanf("%d",&num);

    struct node *p=(struct node *)malloc(sizeof(struct node));

    p->data=num;
    p->next=NULL;
    
    if (start==NULL)
        start=p; 
    else
    { 
        temp=start;
           while(temp->next!=NULL)
               temp=temp->next;
            temp->next=p;
    }
}

void traversal()
{
    
    struct node * temp;
    if (start==NULL)
    printf("list is empty");
    
    else {
        printf("The list:\n");
        temp=start;
        while(temp!=NULL)
        {  printf("%d ", temp->data);
             if(temp->next!=NULL)
              printf(" ");
          
           temp=temp->next;
        }
    }
    
}


void insertAtbeg()
{
    
    int num;
    struct node *temp;
    printf(" enter the elements to be inserted:");
    scanf("%d", &num);

    struct node * p= (struct node *)malloc (sizeof (struct node));

    p->data=num;
    
    p->next=start;
    start=p;
    
}

void  insertAtPosition()
{
     int num,pos,i,c=0;
    struct node *temp;
    printf(" enter the elements to be inserted");
    scanf("%d", &num);
       
    struct node * p= (struct node *)malloc (sizeof (struct node));

    p->data=num;
    p->next=NULL;
    
    temp=start;
    while(temp!=NULL)
       { c++;
        temp=temp->next;}
        
    printf("total no of nodes in list is %d\n", c);
     printf(" enter the position in between 0 to %d:\n", c-1);
        scanf("%d", &pos);
    
    
     if(start==NULL && pos!=0)
     printf("insertion can not possible");
     
     else{ if (pos==0)
              { 
                p->next=start;
                start=p;
              }
              else
              {  
                temp=start;
                for(i=0;i<pos-1;i++)
                   temp=temp->next;
                p->next=temp->next;
                temp->next=p;
              }
                
                
         
     }
}  
    
int main()
{   
    printf("\n 1  create the list\n 2  For insertion at starting\n 3  For insertion at end\n 4  For insertion at any position \n 5 Traversal \n");
    printf(" 6 To exit\n");
    int choice;
    while (1) 
    {
        printf("\nEnter Choice :\n");
        scanf("%d", &choice);
        switch (choice) 
        {
            case 1:
                create();
                break;
            case 2:
                insertAtbeg();
                break;
            case 3:
            create(); //insert at end
                break;
            case 4:
                insertAtPosition();
                break;
            case 5:
                traversal();
                break;
            case 6:
                exit(1);
                break;
            default:
                printf("Incorrect Choice\n");
        }
    }
  
        return 0;
}
